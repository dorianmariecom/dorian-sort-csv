#!/usr/bin/env ruby
# frozen_string_literal: true

require "dorian/arguments"
require "csv"

parsed =
  Dorian::Arguments.parse(
    integers: {
      alias: :i
    },
    headers: {
      alias: :h
    },
    version: {
      alias: :v
    },
    help: {
      alias: :h
    }
  )

abort parsed.help if parsed.options.help

if parsed.options.version
  abort File.read(File.expand_path("../VERSION", __dir__))
end

inputs = parsed.files.map { |file| File.read(file) }
inputs = [$stdin.each_line.to_a.map(&:strip).join("\n")] if inputs.empty?
headers = parsed.options.headers

keys = parsed.arguments.map { |key| key.to_i.to_s == key ? key.to_i : key }

inputs.each do |input|
  input = CSV.parse(input, headers:)

  rows =
    input.sort_by do |row|
      keys.map { |key| parsed.options.integers ? row[key].to_i : row[key] }
    end

  puts(
    CSV.generate do |output|
      output << input.headers if headers
      rows.each { |row| output << row }
    end
  )
end
